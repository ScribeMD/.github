{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Renovate config for ScribeMD in the style of Dependabot",
  "extends": [
    "config:best-practices",
    ":assignee(Kurt-von-Laven)",
    ":reviewer(team:dependency-management)",
    "helpers:disableTypesNodeMajor",
    "mergeConfidence:all-badges"
  ],
  "addLabels": ["dependencies"],
  "commitBodyTable": true,
  "commitMessageAction": "Bump",
  "commitMessageExtra": "to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isSingleVersion}}{{prettyNewVersion}}{{else}}{{#if newValue}}{{{newValue}}}{{else}}{{{newDigestShort}}}{{/if}}{{/if}}{{/if}}",
  "commitMessageTopic": "{{depName}} from {{#if isPinDigest}}{{{currentDigestShort}}}{{else}}{{#if isSingleVersion}}{{replace '^(?<version>(\\d+\\.){2}\\d+)' 'v$<version>' currentVersion}}{{else}}{{#if newValue}}{{{currentValue}}}{{else}}{{{currentDigestShort}}}{{/if}}{{/if}}{{/if}}",
  "configWarningReuseIssue": false,
  "dependencyDashboardApproval": true,
  "dependencyDashboardLabels": ["dependencies"],
  "dotnet": {
    "addLabels": [".NET"]
  },
  "github-actions": {
    "addLabels": ["github_actions"]
  },
  "js": {
    "addLabels": ["javascript"]
  },
  "lockFileMaintenance": {
    "enabled": true,
    "schedule": ["on the 29th day of February in 1970"]
  },
  "packageRules": [
    {
      "matchDatasources": ["docker"],
      "pinDigests": false
    },
    {
      "matchDepTypes": ["config"],
      "semanticCommitScope": "config"
    },
    {
      "matchDepTypes": ["dev-dependencies", "devDependencies"],
      "semanticCommitScope": "deps-dev"
    },
    {
      "matchDepTypes": ["engines"],
      "semanticCommitScope": "engines"
    },
    {
      "matchDepTypes": ["packageManager"],
      "semanticCommitScope": "pkg-manager"
    },
    {
      "matchFileNames": ["action.yaml"],
      "semanticCommitType": "fix"
    },
    {
      "matchPackageNames": ["autopep8", "hhatto/autopep8"],
      "groupName": "autopep8"
    },
    {
      "matchPackageNames": ["commitizen", "commitizen-tools/commitizen"],
      "groupName": "commitizen"
    },
    {
      "matchPackageNames": [
        "bandit",
        "black",
        "mega-linter-runner",
        "mypy",
        "prettier",
        "pylint",
        "ruff",
        "ScribeMD/pre-commit-hooks"
      ],
      "matchPackagePrefixes": ["oxsecurity/megalinter"],
      "groupName": "MegaLinter"
    },
    {
      "matchPackageNames": ["pre-commit", "pre-commit/pre-commit"],
      "groupName": "pre-commit"
    }
  ],
  "postUpdateOptions": ["yarnDedupeHighest"],
  "prConcurrentLimit": 1,
  "prHourlyLimit": 0,
  "pre-commit": {
    "addLabels": ["pre-commit"],
    "enabled": true
  },
  "python": {
    "addLabels": ["python"]
  },
  "rangeStrategy": "pin",
  "customManagers": [
    {
      "customType": "regex",
      "fileMatch": ["^\\.github\\/renovate\\.json$"],
      "matchStrings": [
        "github>(?<depName>ScribeMD/\\.github)#(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-releases",
      "depTypeTemplate": "config"
    },
    {
      "customType": "regex",
      "fileMatch": ["^action\\.yaml$"],
      "matchStrings": [
        "(?<depName>asdf)(-|_branch:\\s*)v(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "packageNameTemplate": "asdf-vm/asdf",
      "datasourceTemplate": "github-releases",
      "depTypeTemplate": "packageManager",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.pre-commit-config\\.yaml$"],
      "matchStrings": ["(?<depName>python)(?<currentValue>(\\d+\\.){2}\\d+)"],
      "packageNameTemplate": "python/cpython",
      "datasourceTemplate": "github-tags",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.tool-versions$"],
      "matchStrings": ["(?<depName>yarn)\\s+(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "packageManager",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.tool-versions$"],
      "matchStrings": [
        "(?<depName>dotnet-core)\\s+(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "packageNameTemplate": "dotnet/sdk",
      "datasourceTemplate": "github-releases",
      "depTypeTemplate": "devDependencies",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "customType": "regex",
      "fileMatch": ["^pyproject\\.toml$"],
      "matchStrings": [
        "(?<depName>poetry-core)>=(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "dev-dependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.pre-commit-config\\.yaml$"],
      "matchStrings": [
        "args:\\s*&megalinter-args\\s*\\[--flavor,\\s*(?<flavor>\\w+),\\s*--release,\\s*(?<currentValue>v(\\d+\\.){2}\\d+)"
      ],
      "depNameTemplate": "MegaLinter",
      "packageNameTemplate": "oxsecurity/megalinter-{{{flavor}}}",
      "datasourceTemplate": "docker",
      "depTypeTemplate": "devDependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.pre-commit-hooks\\.yaml$", "^README\\.md$"],
      "matchStrings": [
        "(?<depName>mega-linter-runner)@v(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "dependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.mega-linter\\.yaml$", "^\\.yarnrc\\.yml$"],
      "matchStrings": [
        "https://raw\\.githubusercontent\\.com/(?<depName>[^/]+/[^/]+)/v?(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-{{#if (equals depName 'ScribeMD/.github')}}releases{{else}}tags{{/if}}",
      "depTypeTemplate": "config",
      "extractVersionTemplate": "^v?(?<version>.*)$"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.mega-linter\\.yaml$"],
      "matchStrings": ["(?<depName>yarn)-(?<currentValue>(\\d+\\.){2}\\d+)"],
      "packageNameTemplate": "@yarnpkg/cli",
      "datasourceTemplate": "npm",
      "depTypeTemplate": "packageManager"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.mega-linter\\.yaml$"],
      "matchStrings": ["(?<depName>\\S+)@(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "devDependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.mega-linter\\.yaml$", "^\\.pre-commit-config\\.yaml$"],
      "matchStrings": ["(?<depName>\\S+)==(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "dev-dependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^\\.yarn/sdks/[^/]+/package\\.json$"],
      "matchStrings": [
        "\"name\":\\s*\"(?<depName>[^\"]+)\",\\s*\"version\":\\s*\"(?<currentValue>(\\d+\\.){2}\\d+)-sdk\""
      ],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "devDependencies"
    },
    {
      "customType": "regex",
      "fileMatch": ["^action\\.yaml$"],
      "matchStrings": [
        "(?<depName>commitizen)_version:\\s*(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "dependencies"
    }
  ],
  "semanticCommitScope": "deps",
  "separateMajorMinor": false
}
