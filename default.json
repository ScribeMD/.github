{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Renovate config for ScribeMD in the style of Dependabot",
  "extends": [
    "config:base",
    ":assignAndReview(Kurt-von-Laven)",
    "helpers:disableTypesNodeMajor",
    "npm:unpublishSafe"
  ],
  "addLabels": ["dependencies"],
  "commitBodyTable": true,
  "commitMessageAction": "Bump",
  "commitMessageExtra": "to {{#if isPinDigest}}{{{newDigestShort}}}{{else}}{{#if isSingleVersion}}{{prettyNewVersion}}{{else}}{{#if newValue}}{{{newValue}}}{{else}}{{{newDigestShort}}}{{/if}}{{/if}}{{/if}}",
  "commitMessageTopic": "{{depName}} from {{#if isPinDigest}}{{{currentDigestShort}}}{{else}}{{#if isSingleVersion}}v{{currentVersion}}{{else}}{{#if newValue}}{{{currentValue}}}{{else}}{{{currentDigestShort}}}{{/if}}{{/if}}{{/if}}",
  "configWarningReuseIssue": false,
  "dependencyDashboardApproval": true,
  "dependencyDashboardLabels": ["dependencies"],
  "dotnet": {
    "addLabels": [".NET"]
  },
  "github-actions": {
    "addLabels": ["github_actions"]
  },
  "js": {
    "addLabels": ["javascript"]
  },
  "lockFileMaintenance": {
    "enabled": true
  },
  "packageRules": [
    {
      "matchDepTypes": ["devDependencies"],
      "semanticCommitScope": "deps-dev"
    },
    {
      "matchPackageNames": ["commitizen", "commitizen-tools/commitizen"],
      "groupName": "commitizen"
    },
    {
      "matchPackagePatterns": ["mega-?linter"],
      "groupName": "MegaLinter"
    },
    {
      "matchPaths": ["action.yaml"],
      "semanticCommitType": "fix"
    }
  ],
  "postUpdateOptions": ["yarnDedupeHighest"],
  "prConcurrentLimit": 1,
  "prHourlyLimit": 0,
  "pre-commit": {
    "addLabels": ["pre-commit"],
    "enabled": true
  },
  "python": {
    "addLabels": ["python"]
  },
  "rangeStrategy": "bump",
  "regexManagers": [
    {
      "fileMatch": ["^\\.github\\/renovate\\.json$"],
      "matchStrings": [
        "github>(?<depName>ScribeMD/.github)#(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "depTypeTemplate": "engines"
    },
    {
      "fileMatch": ["^\\.github\\/workflows\\/[^/]+\\.yaml$"],
      "matchStrings": [
        "runs-on:\\s*['\"]?(?<depName>ubuntu)-(?<currentValue>\\d+)\\.04"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "actions/runner-images",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^ubuntu(?<version>\\d+)\\/"
    },
    {
      "fileMatch": ["^\\.github\\/workflows\\/[^/]+\\.yaml$"],
      "matchStrings": [
        "runs-on:\\s*['\"]?(?<depName>windows)-\\d+(?<currentValue>\\d{2})"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "actions/runner-images",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^win(?<version>\\d+)\\/"
    },
    {
      "fileMatch": ["^action\\.yaml$"],
      "matchStrings": [
        "(?<depName>asdf)(-|_branch:\\s*)(?<currentValue>v(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "asdf-vm/asdf",
      "depTypeTemplate": "engines"
    },
    {
      "fileMatch": [
        "^\\.pre-commit-config\\.yaml$",
        "^\\.tool-versions$",
        "^pyproject\\.toml$"
      ],
      "matchStrings": [
        "(?<depName>python)\\s*(=\\s*\"\\^)?(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "python/cpython",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": ["^\\.tool-versions$"],
      "matchStrings": [
        "(?<depName>poetry)\\s+(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "python-poetry/poetry",
      "depTypeTemplate": "engines"
    },
    {
      "fileMatch": ["^\\.tool-versions$"],
      "matchStrings": ["(?<depName>yarn)\\s+(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "yarnpkg/yarn",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": ["^\\.tool-versions$"],
      "matchStrings": [
        "(?<depName>dotnet-core)\\s+(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "github-tags",
      "packageNameTemplate": "dotnet/sdk",
      "depTypeTemplate": "engines",
      "extractVersionTemplate": "^v(?<version>.*)$"
    },
    {
      "fileMatch": ["^pyproject\\.toml$"],
      "matchStrings": [
        "(?<depName>poetry-core)>=(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "devDependencies"
    },
    {
      "fileMatch": ["^\\.pre-commit-config\\.yaml$"],
      "matchStrings": [
        "args:\\s*&megalinter-args\\s*\\[--flavor,\\s*(?<flavor>\\w+),\\s*--release,\\s*(?<currentValue>v(\\d+\\.){2}\\d+)"
      ],
      "depNameTemplate": "MegaLinter",
      "packageNameTemplate": "oxsecurity/megalinter-{{{flavor}}}",
      "datasourceTemplate": "docker",
      "depTypeTemplate": "devDependencies"
    },
    {
      "fileMatch": ["^\\.pre-commit-hooks\\.yaml$", "^README\\.md$"],
      "matchStrings": [
        "(?<depName>mega-linter-runner)@v(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "devDependencies"
    },
    {
      "fileMatch": ["^\\.mega-linter\\.yaml$"],
      "matchStrings": ["(?<depName>\\S+)@(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "npm",
      "depTypeTemplate": "devDependencies"
    },
    {
      "fileMatch": ["^\\.mega-linter\\.yaml$", "^\\.pre-commit-config\\.yaml$"],
      "matchStrings": ["(?<depName>\\S+)==(?<currentValue>(\\d+\\.){2}\\d+)"],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "devDependencies"
    },
    {
      "fileMatch": ["^action\\.yaml$"],
      "matchStrings": [
        "(?<depName>commitizen)_version:\\s*(?<currentValue>(\\d+\\.){2}\\d+)"
      ],
      "datasourceTemplate": "pypi",
      "depTypeTemplate": "dependencies"
    }
  ],
  "semanticCommitScope": "deps"
}
